- name: check need config/kubelet.yaml
  raw: stat /etc/kubernetes/config/kubelet.yaml
  register: need_config_kubelet
  ignore_errors: True  
  when: K8S_CLUSTER[inventory_hostname] == "worker"

- name: copy config/kubelet.yaml
  template: src=config/kubelet.yaml dest=/etc/kubernetes/config/kubelet.yaml
  when: K8S_CLUSTER[inventory_hostname] == "worker" and need_config_kubelet | failed

- name: check need config/kubeproxy.yaml
  raw: stat /etc/kubernetes/config/kubeproxy.yaml
  register: need_config_kubeproxy
  ignore_errors: True  
  when: K8S_CLUSTER[inventory_hostname] == "worker"

- name: copy config/kubeproxy.yaml
  template: src=config/kubeproxy.yaml dest=/etc/kubernetes/config/kubeproxy.yaml
  when: K8S_CLUSTER[inventory_hostname] == "worker" and need_config_kubeproxy | failed  

- name: check need scripts/kubelet.sh
  raw: stat /etc/kubernetes/scripts/kubelet.sh
  register: need_scripts_kubelet
  ignore_errors: True  
  when: K8S_CLUSTER[inventory_hostname] == "worker"

- name: copy scripts/kubelet.sh
  copy: src=scripts/kubelet.sh dest=/etc/kubernetes/scripts/kubelet.sh mode=0755
  when: K8S_CLUSTER[inventory_hostname] == "worker" and need_scripts_kubelet | failed    

- name: check need manifests/kube-proxy.yaml
  raw: stat /etc/kubernetes/manifests/kube-proxy.yaml
  register: need_manifests_proxy
  ignore_errors: True
  when: K8S_CLUSTER[inventory_hostname] == "worker"

- name: template manifests/kube-proxy.yaml
  template: src=manifests/kube-proxy.yaml dest=/etc/kubernetes/manifests/kube-proxy.yaml
  when: K8S_CLUSTER[inventory_hostname] == "worker" and need_manifests_proxy | failed    

- name: check need services/kubelet.service
  raw: stat /etc/kubernetes/services/kubelet.service
  register: need_services_kubelet
  ignore_errors: True
  when: K8S_CLUSTER[inventory_hostname] == "worker"

- name: template services/kubelet.service
  template: src=services/kubelet.service dest=/etc/systemd/system/kubelet.service
  when: K8S_CLUSTER[inventory_hostname] == "worker" and need_services_kubelet | failed  

- name: start services kubelet.service
  raw: systemctl daemon-reload && systemctl enable kubelet.service && systemctl start kubelet.service
  when: K8S_CLUSTER[inventory_hostname] == "worker" and need_services_kubelet | failed